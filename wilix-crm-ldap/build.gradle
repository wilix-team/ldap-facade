plugins {
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "com.palantir.docker" version "0.25.0"
    id "com.palantir.docker-run" version "0.25.0"
    id "java" // or "java"
    id "java-library" // or "java"
}

apply plugin: 'java'

// todo
description 'Основное приложение ldap фасада. Реализует сервер для обработки входящих соединений.'

dependencies {
    implementation project(':server')
    implementation project(':espo-storage')

    implementation 'org.springframework.boot:spring-boot-starter'

    testImplementation(testFixtures(project(":server")))
    testImplementation(testFixtures(project(":espo-storage")))

//    compile project(':server')
//    testCompile project(path: ':server')
//
//    compile project(':espo-storage')
//    testCompile project(path: ':espo-storage')
//
//    testCompile project(':server').sourceSets.test.output
//    testCompile project(':espo-storage').sourceSets.test.output

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

bootJar {
    mainClassName = 'dev.wilix.ldap.facade.server.Application'
}

docker {
    name = "crm-ldap-facade:$version"
    files(tasks.getByName("bootJar").outputs)
    tag("version", "$version")
    pull(true)
    setDockerfile(file("Dockerfile"))
}


dockerRun {
    name = rootProject.name
    image = "crm-ldap-facade:$version"
    ports("10636:10636")
    env(['LISTENER_SSLENABLED': 'false'])
}
/////